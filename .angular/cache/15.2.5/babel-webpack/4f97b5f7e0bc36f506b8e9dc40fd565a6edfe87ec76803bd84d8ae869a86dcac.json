{"ast":null,"code":"import { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = Constants.BASE_URL + \"auth/\";\n  }\n  refreshToken() {\n    var json = JSON.parse(localStorage.getItem(\"data\") ?? \"\");\n    var token = json[\"Token\"];\n    var refreshToken = json[\"RefreshToken\"];\n    var body = {\n      \"token\": token,\n      \"refreshToken\": refreshToken\n    };\n    this.httpClient.post(this.url + 'refresh-user', body, {\n      withCredentials: true\n    }).subscribe({\n      next: data => {\n        localStorage.setItem(\"data\", JSON.stringify(data));\n        console.log(data);\n        return true;\n      },\n      error: error => {\n        console.log(error);\n        return false;\n        //  switch(error.status) {\n        //    case 500: {\n        //       return false;\n        //    }break;\n        //  }\n      }\n    });\n\n    return false;\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,SAAS,QAAQ,0BAA0B;;;AAKpD,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAF9B,QAAG,GAAWH,SAAS,CAACI,QAAQ,GAAG,OAAO;EAEI;EAE9CC,YAAY;IACV,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAE,EAAE,CAAC;IACvD,IAAIC,KAAK,GAAGL,IAAI,CAAC,OAAO,CAAC;IACzB,IAAID,YAAY,GAAGC,IAAI,CAAC,cAAc,CAAC;IACvC,IAAIM,IAAI,GAAG;MACT,OAAO,EAAED,KAAK;MACd,cAAc,EAAEN;KACjB;IAED,IAAI,CAACF,UAAU,CAACU,IAAI,CAAC,IAAI,CAACC,GAAG,GAAC,cAAc,EAAEF,IAAI,EAAE;MAACG,eAAe,EAAE;IAAI,CAAC,CAAC,CAACC,SAAS,CACpF;MAAEC,IAAI,EAAEC,IAAI,IAAG;QACVT,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACF,IAAI,CAAC,CAAC;QACjDG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;QAClB,OAAO,IAAI;MACf,CAAC;MACDK,KAAK,EAAEA,KAAK,IAAG;QACVF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;QAClB,OAAO,KAAK;QACd;QACA;QACA;QACA;QACA;MACH;IAAC,CAAC,CACL;;IAED,OAAO,KAAK;EACb;;AAjCWtB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAuB,SAAZvB,YAAY;EAAAwB,YAFX;AAAM","names":["Constants","LoginService","constructor","httpClient","BASE_URL","refreshToken","json","JSON","parse","localStorage","getItem","token","body","post","url","withCredentials","subscribe","next","data","setItem","stringify","console","log","error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\pages\\login\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Constants } from 'src/app/models/Constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  url: string = Constants.BASE_URL + \"auth/\"\n\n  constructor(private httpClient: HttpClient) { }\n\n  refreshToken() {\n    var json = JSON.parse(localStorage.getItem(\"data\")??\"\");\n    var token = json[\"Token\"];\n    var refreshToken = json[\"RefreshToken\"];\n    var body = {\n      \"token\": token,\n      \"refreshToken\": refreshToken\n    }\n\n    this.httpClient.post(this.url+'refresh-user', body, {withCredentials: true}).subscribe(\n      { next: data => {\n           localStorage.setItem(\"data\", JSON.stringify(data));\n            console.log(data)\n           return true;\n       },\n       error: error => {\n            console.log(error);\n            return false;\n          //  switch(error.status) {\n          //    case 500: {\n          //       return false;\n          //    }break;\n          //  }\n       }}\n   );\n\n   return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}