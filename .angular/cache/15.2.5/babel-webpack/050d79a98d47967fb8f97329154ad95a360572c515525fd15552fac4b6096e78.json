{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet EditWarehouseItemComponent = class EditWarehouseItemComponent {\n  constructor(formBuilder, warehouseService, warehouseItemService, productService, toastr, actRoute) {\n    this.formBuilder = formBuilder;\n    this.warehouseService = warehouseService;\n    this.warehouseItemService = warehouseItemService;\n    this.productService = productService;\n    this.toastr = toastr;\n    this.actRoute = actRoute;\n    this.warehouses = [];\n    this.products = [];\n    this.warehouseItemId = 0;\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n    this.warehouseItem = {\n      id: this.warehouseItemId,\n      quantity: 0,\n      broughtDate: new Date(),\n      incomingPrice: 0,\n      sellingPrice: 0,\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date(),\n      productId: 0,\n      productName: '',\n      warehouseId: 0,\n      warehouseName: ''\n    };\n    this.quantity = new FormControl(0, [Validators.required]);\n    this.broughtDate = new FormControl('', [Validators.required, Validators.nullValidator]);\n    this.incomingPrice = new FormControl(0, [Validators.required]);\n    this.sellingPrice = new FormControl(0, [Validators.required]);\n    this.productId = new FormControl(0, [Validators.required, Validators.nullValidator]);\n    this.adminId = new FormControl('');\n    this.warehouseId = new FormControl('', [Validators.required, Validators.nullValidator]);\n    this.editForm = this.formBuilder.group({\n      quantity: this.quantity,\n      broughtDate: this.broughtDate,\n      incomingPrice: this.incomingPrice,\n      sellingPrice: this.sellingPrice,\n      productId: this.productId,\n      adminId: this.adminId,\n      warehouseId: this.warehouseId\n    });\n  }\n  ngOnInit() {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.warehouseItemId = Number(routeParams.get('warehouseItemId') ?? \"\");\n    this.warehouseItemService.getById(this.warehouseItemId).subscribe(data => {\n      this.warehouseItem = data;\n      this.selectProduct(this.warehouseItem.productId);\n    });\n    this.warehouseService.getAll().subscribe(data => {\n      this.warehouses = data;\n    });\n    this.productService.getAll().subscribe(data => this.products = data);\n  }\n  focusOnScan() {\n    var element = document.getElementById('barcodeInput');\n    element.focus();\n  }\n  scanned(event) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      var barcode = document.getElementById('barcodeInput');\n      var product = this.products.filter(p => p.barcode == barcode.value)[0];\n      this.selectProduct(product.id);\n    }\n  }\n  clearbarcode() {\n    var input = document.getElementById('barcodeInput');\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n  clearsearch() {\n    var input = document.getElementById('productSearchText');\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n  clearProductSelection() {\n    var input = document.getElementById('pname');\n    input.innerText = '';\n    input = document.getElementById('pmadeIn');\n    input.innerText = '';\n    input = document.getElementById('pcategoryName');\n    input.innerText = '';\n    input = document.getElementById('psubcategoryName');\n    input.innerText = '';\n    input = document.getElementById('description');\n    input.innerText = '';\n    this.cancelSelection();\n  }\n  selectProduct(id) {\n    this.productService.getById(id).subscribe(data => {\n      this.selectedProduct = data;\n      this.editForm.controls.productId.setValue(id);\n      this.setInformations();\n      this.checkProductId();\n    });\n  }\n  selectByName() {\n    var input = document.getElementById('productSearchText');\n    var product = this.products.filter(p => p.name == input.value)[0];\n    this.selectProduct(product.id);\n  }\n  cancelSelection() {\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n  }\n  setInformations() {\n    var input = document.getElementById('pname');\n    input.innerText = this.selectedProduct.name;\n    input = document.getElementById('productSearchText');\n    input.value = this.selectedProduct.name;\n    input = document.getElementById('barcodeInput');\n    input.value = this.selectedProduct.barcode;\n    var select = document.getElementById('warehouseSelect');\n    alert(this.warehouseItem.warehouseId + \" == \" + this.editForm.getRawValue().warehouseId);\n    input = document.getElementById('pmadeIn');\n    input.innerText = this.selectedProduct.madeIn;\n    input = document.getElementById('pcategoryName');\n    input.innerText = this.selectedProduct.categoryName;\n    input = document.getElementById('psubcategoryName');\n    input.innerText = this.selectedProduct.subcategoryName;\n    input = document.getElementById('description');\n    input.innerText = this.selectedProduct.description;\n  }\n  checkProductId() {\n    var message = document.getElementById('productIdErrorMessage');\n    if (this.selectedProduct.id == 0) {\n      message.classList.remove('d-none');\n    } else {\n      message.classList.add('d-none');\n    }\n  }\n  add() {\n    this.warehouseItemService.add(this.editForm.getRawValue());\n  }\n};\nEditWarehouseItemComponent = __decorate([Component({\n  selector: 'app-edit-warehouse-item',\n  templateUrl: './edit-warehouse-item.component.html',\n  styleUrls: ['./edit-warehouse-item.component.css']\n})], EditWarehouseItemComponent);\nexport { EditWarehouseItemComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","EditWarehouseItemComponent","constructor","formBuilder","warehouseService","warehouseItemService","productService","toastr","actRoute","id","name","description","madeIn","barcode","warningCount","subcategoryId","subcategoryName","categoryId","categoryName","adminId","adminFullName","addedDate","Date","modifiedDate","warehouseItemId","quantity","broughtDate","incomingPrice","sellingPrice","productId","productName","warehouseId","warehouseName","required","nullValidator","group","ngOnInit","routeParams","snapshot","paramMap","Number","get","getById","subscribe","data","warehouseItem","selectProduct","getAll","warehouses","products","focusOnScan","element","document","getElementById","focus","scanned","event","keyCode","preventDefault","product","filter","p","value","clearbarcode","input","clearProductSelection","checkProductId","clearsearch","innerText","cancelSelection","selectedProduct","editForm","controls","setValue","setInformations","selectByName","select","alert","getRawValue","message","classList","remove","add","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\warehouse-item\\edit-warehouse-item\\edit-warehouse-item.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/models/Product';\nimport { WarehouseItem } from 'src/app/models/WarehouseItem';\nimport { Warehouse } from 'src/app/models/warehouse';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { WarehouseService } from 'src/app/services/warehouse/warehouse.service';\nimport { WarehouseItemService } from 'src/app/services/warehouseItem/warehouse-item.service';\n\n@Component({\n  selector: 'app-edit-warehouse-item',\n  templateUrl: './edit-warehouse-item.component.html',\n  styleUrls: ['./edit-warehouse-item.component.css']\n})\nexport class EditWarehouseItemComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private warehouseService: WarehouseService,\n    private warehouseItemService: WarehouseItemService,\n    private productService: ProductService,\n    private toastr: ToastrService,\n    private actRoute: ActivatedRoute\n  ) {}\n\n  warehouses: Warehouse[] = [];\n  products: Product[] = [];\n  warehouseItemId: number = 0;\n  selectedProduct: Product = {\n    id: 0,\n    name: '',\n    description: '',\n    madeIn: '',\n    barcode: '',\n    warningCount: 0,\n    subcategoryId: 0,\n    subcategoryName: '',\n    categoryId: 0,\n    categoryName: '',\n    adminId: '',\n    adminFullName: '',\n    addedDate: new Date(),\n    modifiedDate: new Date()\n  };\n  warehouseItem: WarehouseItem = {\n    id: this.warehouseItemId,\n    quantity: 0,\n    broughtDate: new Date(),\n    incomingPrice: 0,\n    sellingPrice: 0,\n    adminId: '',\n    adminFullName: '',\n    addedDate: new Date(),\n    modifiedDate: new Date(),\n    productId: 0,\n    productName: '',\n    warehouseId: 0,\n    warehouseName: ''\n  }\n\n  ngOnInit(): void {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.warehouseItemId = Number(routeParams.get('warehouseItemId')??\"\");\n    this.warehouseItemService.getById(this.warehouseItemId).subscribe(data => {\n      this.warehouseItem = data;\n      this.selectProduct(this.warehouseItem.productId);\n    });\n    this.warehouseService.getAll().subscribe((data) => {\n      this.warehouses = data;\n    });\n    this.productService.getAll().subscribe((data) => this.products = data);\n  }\n\n  quantity = new FormControl(0, [\n    Validators.required\n  ]);\n\n  broughtDate = new FormControl('', [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  incomingPrice = new FormControl(0, [\n    Validators.required,\n  ]);\n\n  sellingPrice = new FormControl(0, [\n    Validators.required,\n  ]);\n\n  productId = new FormControl(0, [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  adminId = new FormControl('');\n\n  warehouseId = new FormControl('', [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  public editForm = this.formBuilder.group({\n    quantity: this.quantity,\n    broughtDate: this.broughtDate,\n    incomingPrice: this.incomingPrice,\n    sellingPrice: this.sellingPrice,\n    productId: this.productId,\n    adminId: this.adminId,\n    warehouseId: this.warehouseId\n  });\n\n  focusOnScan() {\n    var element = document.getElementById('barcodeInput') as HTMLInputElement;\n    element.focus();\n  }\n\n  scanned(event: any) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      var barcode = document.getElementById('barcodeInput') as HTMLInputElement;\n      var product = this.products.filter(p => p.barcode == barcode.value)[0];\n      this.selectProduct(product.id);\n    }\n  }\n\n  clearbarcode() {\n    var input = document.getElementById('barcodeInput') as HTMLInputElement;\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n\n  clearsearch() {\n    var input = document.getElementById('productSearchText') as HTMLInputElement;\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();  \n  }\n\n  clearProductSelection() {\n    var input = document.getElementById('pname') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('pmadeIn') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('pcategoryName') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('psubcategoryName') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('description') as HTMLInputElement;\n    input.innerText = '';\n    this.cancelSelection();\n  }\n\n  selectProduct(id: number){\n    this.productService.getById(id).subscribe(data => {\n      this.selectedProduct = data;\n      this.editForm.controls.productId.setValue(id);\n      this.setInformations();\n      this.checkProductId();\n    });\n  }\n\n  selectByName() {\n    var input = document.getElementById('productSearchText') as HTMLInputElement;\n    var product = this.products.filter(p => p.name == input.value)[0];\n    this.selectProduct(product.id);\n  }\n\n  cancelSelection() {\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n  }\n\n  setInformations() {\n    var input = document.getElementById('pname') as HTMLInputElement;\n    input.innerText = this.selectedProduct.name;\n    input = document.getElementById('productSearchText') as HTMLInputElement;\n    input.value = this.selectedProduct.name;\n    input = document.getElementById('barcodeInput') as HTMLInputElement;\n    input.value = this.selectedProduct.barcode;\n\n    var select = document.getElementById('warehouseSelect') as HTMLSelectElement;\n    alert(this.warehouseItem.warehouseId + \" == \" + this.editForm.getRawValue().warehouseId)\n\n\n    input = document.getElementById('pmadeIn') as HTMLInputElement;\n    input.innerText = this.selectedProduct.madeIn;\n    input = document.getElementById('pcategoryName') as HTMLInputElement;\n    input.innerText = this.selectedProduct.categoryName;\n    input = document.getElementById('psubcategoryName') as HTMLInputElement;\n    input.innerText = this.selectedProduct.subcategoryName;\n    input = document.getElementById('description') as HTMLInputElement;\n    input.innerText = this.selectedProduct.description;\n\n\n  }\n\n  checkProductId() {\n    var message = document.getElementById('productIdErrorMessage') as HTMLHeadingElement;\n    if (this.selectedProduct.id == 0) {\n      message.classList.remove('d-none')\n    }\n    else {\n      message.classList.add('d-none');\n    }\n  }\n\n  add() {\n    this.warehouseItemService.add(this.editForm.getRawValue());\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}