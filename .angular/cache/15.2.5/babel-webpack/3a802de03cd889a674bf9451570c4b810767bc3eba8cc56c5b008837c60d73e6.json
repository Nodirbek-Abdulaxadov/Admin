{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet SubcategoryComponent = class SubcategoryComponent {\n  constructor(subcategoryService, formBuilder, categoryService) {\n    this.subcategoryService = subcategoryService;\n    this.formBuilder = formBuilder;\n    this.categoryService = categoryService;\n    this.nameValid = false;\n    this.name = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]);\n    this.categoryId = new FormControl('', [Validators.required, Validators.nullValidator]);\n    this.addNewForm = this.formBuilder.group({\n      name: this.name\n    });\n  }\n  ngOnInit() {\n    this.subcategories = this.subcategoryService.getPaged(1);\n    this.categories = this.categoryService.getAll();\n    this.pagination = this.subcategoryService.pagination;\n  }\n  add() {\n    this.subcategoryService.add(this.addNewForm.getRawValue());\n  }\n  remove(id) {\n    this.subcategoryService.remove(id);\n  }\n  archive(id) {\n    this.subcategoryService.archive(id);\n  }\n  openEditModal(model) {\n    this.subcategory = model;\n    var name = document.getElementById('categoryName');\n    name?.setAttribute('value', model.name);\n  }\n  check() {\n    var name = document.getElementById('categoryName').value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    } else {\n      this.nameValid = true;\n    }\n  }\n  edit() {\n    this.subcategory.name = document.getElementById('categoryName').value;\n    this.subcategoryService.edit(this.subcategory);\n  }\n  paging(pageNumber) {\n    this.subcategories = this.subcategoryService.getPaged(pageNumber);\n    this.pagination = this.subcategoryService.pagination;\n  }\n};\nSubcategoryComponent = __decorate([Component({\n  selector: 'app-subcategory',\n  templateUrl: './subcategory.component.html',\n  styleUrls: ['./subcategory.component.css']\n})], SubcategoryComponent);\nexport { SubcategoryComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAa9D,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAQ/BC,YAAoBC,kBAAsC,EACtCC,WAAwB,EACxBC,eAAgC;IAFhC,uBAAkB,GAAlBF,kBAAkB;IAClB,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IALnC,cAAS,GAAY,KAAK;IAY1B,SAAI,GAAG,IAAIN,WAAW,CAAC,EAAE,EAAE,CACzBC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,EACvBP,UAAU,CAACQ,SAAS,CAAC,GAAG,CAAC,CAC1B,CAAC;IAEF,eAAU,GAAG,IAAIT,WAAW,CAAC,EAAE,EAAE,CAC/BC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACS,aAAa,CACzB,CAAC;IAEK,eAAU,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACzCC,IAAI,EAAE,IAAI,CAACA;KACZ,CAAC;EApBoD;EAEtDC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACV,kBAAkB,CAACW,QAAQ,CAAC,CAAC,CAAC;IACxD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,eAAe,CAACW,MAAM,EAAE;IAC/C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACd,kBAAkB,CAACc,UAAU;EACtD;EAgBAC,GAAG;IACD,IAAI,CAACf,kBAAkB,CAACe,GAAG,CAAC,IAAI,CAACC,UAAU,CAACC,WAAW,EAAE,CAAC;EAC5D;EAEAC,MAAM,CAACC,EAAU;IACf,IAAI,CAACnB,kBAAkB,CAACkB,MAAM,CAACC,EAAE,CAAC;EACpC;EAEAC,OAAO,CAACD,EAAU;IAChB,IAAI,CAACnB,kBAAkB,CAACoB,OAAO,CAACD,EAAE,CAAC;EACrC;EAEAE,aAAa,CAACC,KAAkB;IAC5B,IAAI,CAACC,WAAW,GAAGD,KAAK;IACxB,IAAId,IAAI,GAAGgB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAClDjB,IAAI,EAAEkB,YAAY,CAAC,OAAO,EAAEJ,KAAK,CAACd,IAAI,CAAC;EAC3C;EAEAmB,KAAK;IACH,IAAInB,IAAI,GAAIgB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAsB,CAACG,KAAK;IAC9E,IAAIpB,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,CAACqB,MAAM,GAAG,CAAC,EAAE;MACjD,IAAI,CAACC,SAAS,GAAG,KAAK;KACvB,MACI;MACH,IAAI,CAACA,SAAS,GAAG,IAAI;;EAEzB;EAEAC,IAAI;IACF,IAAI,CAACR,WAAW,CAACf,IAAI,GAAIgB,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAsB,CAACG,KAAK;IAC3F,IAAI,CAAC5B,kBAAkB,CAAC+B,IAAI,CAAC,IAAI,CAACR,WAAW,CAAC;EAChD;EAEAS,MAAM,CAACC,UAAkB;IACvB,IAAI,CAACvB,aAAa,GAAG,IAAI,CAACV,kBAAkB,CAACW,QAAQ,CAACsB,UAAU,CAAC;IACjE,IAAI,CAACnB,UAAU,GAAG,IAAI,CAACd,kBAAkB,CAACc,UAAU;EACtD;CACD;AArEYhB,oBAAoB,eALhCH,SAAS,CAAC;EACTuC,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWtC,oBAAoB,CAqEhC;SArEYA,oBAAoB","names":["Component","FormControl","Validators","SubcategoryComponent","constructor","subcategoryService","formBuilder","categoryService","required","minLength","maxLength","nullValidator","group","name","ngOnInit","subcategories","getPaged","categories","getAll","pagination","add","addNewForm","getRawValue","remove","id","archive","openEditModal","model","subcategory","document","getElementById","setAttribute","check","value","length","nameValid","edit","paging","pageNumber","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\subcategory\\subcategory.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/models/Category';\nimport { Pagination } from 'src/app/models/Pagination';\nimport { Subcategory } from 'src/app/models/Subcategory';\nimport { CategoryService } from 'src/app/services/category/category.service';\nimport { SubcategoryService } from 'src/app/services/subcategory/subcategory.service';\n\n@Component({\n  selector: 'app-subcategory',\n  templateUrl: './subcategory.component.html',\n  styleUrls: ['./subcategory.component.css']\n})\nexport class SubcategoryComponent {\n  subcategories: Observable<Subcategory[]> | undefined;\n  categories: Observable<Category[]> | undefined;\n  nameField: any;\n  subcategory: any;\n  nameValid: boolean = false;\n  public pagination: Pagination | undefined;\n\n  constructor(private subcategoryService: SubcategoryService,           \n              private formBuilder: FormBuilder,\n              private categoryService: CategoryService){}\n\n  ngOnInit(): void {\n    this.subcategories = this.subcategoryService.getPaged(1);\n    this.categories = this.categoryService.getAll();\n    this.pagination = this.subcategoryService.pagination;\n  }\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(100)\n  ]);\n\n  categoryId = new FormControl('', [\n    Validators.required,\n    Validators.nullValidator\n  ]);\n\n  public addNewForm = this.formBuilder.group({\n    name: this.name\n  });\n\n  add() {\n    this.subcategoryService.add(this.addNewForm.getRawValue());\n  }\n\n  remove(id: number) {\n    this.subcategoryService.remove(id);\n  }\n\n  archive(id: number) {\n    this.subcategoryService.archive(id);\n  }\n\n  openEditModal(model: Subcategory) {\n      this.subcategory = model;\n      var name = document.getElementById('categoryName');\n      name?.setAttribute('value', model.name);\n  }\n\n  check() {\n    var name = (document.getElementById('categoryName') as HTMLInputElement).value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    }\n    else {\n      this.nameValid = true;\n    }\n  }\n\n  edit() {\n    this.subcategory.name = (document.getElementById('categoryName') as HTMLInputElement).value;\n    this.subcategoryService.edit(this.subcategory)\n  }\n\n  paging(pageNumber: number) {\n    this.subcategories = this.subcategoryService.getPaged(pageNumber);\n    this.pagination = this.subcategoryService.pagination;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}