{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/transfer.service\";\nimport * as i2 from \"@angular/router\";\nexport class TransferComponent {\n  constructor(transferService, actRoute, router, cdrf) {\n    this.transferService = transferService;\n    this.actRoute = actRoute;\n    this.router = router;\n    this.cdrf = cdrf;\n    this.page = 0;\n  }\n  ngOnInit() {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.page = Number(routeParams.get('page') ?? 1);\n    this.paging(this.page);\n  }\n  paging(pageNumber) {\n    this.page = Math.round(pageNumber);\n    if (pageNumber > this.transferService.pagination.CurrentPage && pageNumber > 3) {\n      pageNumber -= 1;\n    } else if (pageNumber < this.transferService.pagination.CurrentPage && pageNumber > 3) {\n      pageNumber += 1;\n    }\n    this.transfers = this.transferService.getPaged(this.page);\n    this.pagination = this.transferService.pagination;\n    this.router.navigate(['/transfers/page', this.page]);\n  }\n}\nTransferComponent.ɵfac = function TransferComponent_Factory(t) {\n  return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.TransferService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransferComponent,\n  selectors: [[\"app-transfer\"]],\n  decls: 0,\n  vars: 0,\n  template: function TransferComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,iBAAiB;EAM5BC,YACUC,eAAgC,EAChCC,QAAwB,EACxBC,MAAc,EACdC,IAAuB;IAHvB,oBAAe,GAAfH,eAAe;IACf,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IANP,SAAI,GAAW,CAAC;EAOpB;EAEHC,QAAQ;IACN,MAAMC,WAAW,GAAG,IAAI,CAACJ,QAAQ,CAACK,QAAQ,CAACC,QAAQ;IACnD,IAAI,CAACC,IAAI,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,IAAI,CAACC,MAAM,CAAC,IAAI,CAACH,IAAI,CAAC;EACxB;EAGAG,MAAM,CAACC,UAAkB;IACvB,IAAI,CAACJ,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC;IAElC,IACEA,UAAU,GAAG,IAAI,CAACZ,eAAe,CAACe,UAAU,CAACC,WAAW,IACxDJ,UAAU,GAAG,CAAC,EACd;MACAA,UAAU,IAAI,CAAC;KAChB,MAAM,IACLA,UAAU,GAAG,IAAI,CAACZ,eAAe,CAACe,UAAU,CAACC,WAAW,IACxDJ,UAAU,GAAG,CAAC,EACd;MACAA,UAAU,IAAI,CAAC;;IAGjB,IAAI,CAACK,SAAS,GAAG,IAAI,CAACjB,eAAe,CAACkB,QAAQ,CAAC,IAAI,CAACV,IAAI,CAAC;IACzD,IAAI,CAACO,UAAU,GAAG,IAAI,CAACf,eAAe,CAACe,UAAU;IACjD,IAAI,CAACb,MAAM,CAACiB,QAAQ,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAACX,IAAI,CAAC,CAAC;EACtD;;AAtCWV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["TransferComponent","constructor","transferService","actRoute","router","cdrf","ngOnInit","routeParams","snapshot","paramMap","page","Number","get","paging","pageNumber","Math","round","pagination","CurrentPage","transfers","getPaged","navigate","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\transfer\\transfer.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Pagination } from 'src/app/models/Pagination';\nimport { Transfer } from 'src/app/models/Transfer';\nimport { TransferService } from 'src/app/services/transfer.service';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css'],\n})\nexport class TransferComponent implements OnInit {\n  transfers: Observable<Transfer[]> | undefined;\n  pagination: Pagination | undefined;\n\n  public page: number = 0;\n\n  constructor(\n    private transferService: TransferService,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private cdrf: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.page = Number(routeParams.get('page') ?? 1);\n    this.paging(this.page);\n  }\n\n\n  paging(pageNumber: number) {\n    this.page = Math.round(pageNumber);\n\n    if (\n      pageNumber > this.transferService.pagination.CurrentPage &&\n      pageNumber > 3\n    ) {\n      pageNumber -= 1;\n    } else if (\n      pageNumber < this.transferService.pagination.CurrentPage &&\n      pageNumber > 3\n    ) {\n      pageNumber += 1;\n    }\n\n    this.transfers = this.transferService.getPaged(this.page);\n    this.pagination = this.transferService.pagination;\n    this.router.navigate(['/transfers/page', this.page]);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}