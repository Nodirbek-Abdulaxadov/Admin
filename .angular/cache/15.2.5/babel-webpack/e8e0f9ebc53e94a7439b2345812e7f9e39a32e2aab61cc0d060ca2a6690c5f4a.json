{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../helpers/token.service\";\nimport * as i4 from \"@angular/router\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient, toastr, tokenService, router) {\n      this.httpClient = httpClient;\n      this.toastr = toastr;\n      this.tokenService = tokenService;\n      this.router = router;\n      this.baseUrl = Constants.BASE_URL + 'users/';\n    }\n    getAll(role) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      return this.httpClient.get(this.baseUrl + role, {\n        headers\n      });\n    }\n    add(form) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.post(Constants.BASE_URL + 'auth/register', form, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success(\"Muvofaqqiyatli qo'shildi!\").onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000\n          });\n        }\n      });\n    }\n    edit(form) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.put(Constants.BASE_URL + 'auth/update', form, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success('Muvofaqqiyatli saqlandi!').onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000\n          });\n        }\n      });\n    }\n    getToken() {\n      var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata ?? '');\n      return json['Token'];\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.TokenService), i0.ɵɵinject(i4.Router));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}