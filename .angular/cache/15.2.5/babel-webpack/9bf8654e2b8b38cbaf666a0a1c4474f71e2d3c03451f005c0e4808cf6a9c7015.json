{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WarehouseService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = \"https://localhost:44367/api/warehouse/\";\n  }\n  getAll() {\n    return this.httpClient.get(this.baseUrl);\n  }\n  add(form) {\n    this.httpClient.post(this.baseUrl, form).subscribe({\n      next: data => {\n        return true;\n      },\n      error: error => {\n        return false;\n      }\n    });\n    return false;\n  }\n  edit() {}\n  remove(id) {\n    this.httpClient.delete(this.baseUrl + id).subscribe({\n      next: data => {\n        localStorage.setItem(\"data\", JSON.stringify(data));\n        return true;\n      },\n      error: error => {\n        return false;\n      }\n    });\n    return false;\n  }\n}\nWarehouseService.ɵfac = function WarehouseService_Factory(t) {\n  return new (t || WarehouseService)(i0.ɵɵinject(i1.HttpClient));\n};\nWarehouseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WarehouseService,\n  factory: WarehouseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAE9B,YAAO,GAAU,wCAAwC;EAFX;EAI9CC,MAAM;IACJ,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAc,IAAI,CAACC,OAAO,CAAC;EACvD;EAEAC,GAAG,CAACC,IAAS;IACX,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,IAAI,CAACH,OAAO,EAAEE,IAAI,CAAC,CAACE,SAAS,CAChD;MAAEC,IAAI,EAAEC,IAAI,IAAG;QACb,OAAO,IAAI;MACf,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACb,OAAO,KAAK;MACd;IAAC,CAAC,CACD;IACD,OAAO,KAAK;EACd;EAEAC,IAAI,IAAG;EAEPC,MAAM,CAACC,EAAU;IACf,IAAI,CAACb,UAAU,CAACc,MAAM,CAAC,IAAI,CAACX,OAAO,GAAGU,EAAE,CAAC,CAACN,SAAS,CAAC;MAAEC,IAAI,EAAEC,IAAI,IAAG;QACjEM,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;QAClD,OAAO,IAAI;MACf,CAAC;MACDC,KAAK,EAAEA,KAAK,IAAG;QACb,OAAO,KAAK;MACd;IAAC,CAAC,CAAC;IAED,OAAO,KAAK;EACd;;AAlCWZ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAqB,SAAhBrB,gBAAgB;EAAAsB,YAFf;AAAM","names":["WarehouseService","constructor","httpClient","getAll","get","baseUrl","add","form","post","subscribe","next","data","error","edit","remove","id","delete","localStorage","setItem","JSON","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\services\\warehouse\\warehouse.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Warehouse } from 'src/app/models/warehouse';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WarehouseService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  baseUrl: string =\"https://localhost:44367/api/warehouse/\";\n\n  getAll() : Observable<Warehouse[]> {\n    return this.httpClient.get<Warehouse[]>(this.baseUrl);\n  }\n\n  add(form: any): boolean {\n    this.httpClient.post(this.baseUrl, form).subscribe(\n      { next: data => {\n        return true;\n    },\n    error: error => {\n      return false;\n    }}\n    );\n    return false;\n  }\n\n  edit(){}\n\n  remove(id: number): boolean {\n    this.httpClient.delete(this.baseUrl + id).subscribe({ next: data => {\n      localStorage.setItem(\"data\", JSON.stringify(data));\n      return true;\n  },\n  error: error => {\n    return false;\n  }});\n\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}