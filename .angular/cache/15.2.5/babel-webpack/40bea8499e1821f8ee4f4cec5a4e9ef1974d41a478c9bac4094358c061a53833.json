{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../helpers/token.service\";\nimport * as i4 from \"@angular/router\";\nexport class UserService {\n  constructor(httpClient, toastr, tokenService, router) {\n    this.httpClient = httpClient;\n    this.toastr = toastr;\n    this.tokenService = tokenService;\n    this.router = router;\n    this.baseUrl = Constants.BASE_URL + 'users/';\n  }\n  getAll() {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    return this.httpClient.get(this.baseUrl, {\n      headers\n    });\n  }\n  getToken() {\n    var localdata = localStorage.getItem('data');\n    var json = JSON.parse(localdata ?? '');\n    return json['Token'];\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.TokenService), i0.ɵɵinject(i4.Router));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAK9D,SAASC,SAAS,QAAQ,0BAA0B;;;;;;AAOpD,OAAM,MAAOC,WAAW;EACpBC,YACUC,UAAsB,EACtBC,MAAqB,EACrBC,YAA0B,EAC1BC,MAAc;IAHd,eAAU,GAAVH,UAAU;IACV,WAAM,GAANC,MAAM;IACN,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAGhB,YAAO,GAAWN,SAAS,CAACO,QAAQ,GAAG,QAAQ;EAF5C;EAIHC,MAAM;IACJ,MAAMC,OAAO,GAAG,IAAIV,WAAW,EAAE,CAACW,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,QAAQ,EAAE,EAAE,CAC5B;IACD,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAAS,IAAI,CAACC,OAAO,EAAE;MAAEJ;IAAO,CAAE,CAAC;EAC/D;EAGFE,QAAQ;IACN,IAAIG,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,IAAI,EAAE,CAAC;IACtC,OAAOG,IAAI,CAAC,OAAO,CAAC;EACtB;;AAvBWhB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmB,SAAXnB,WAAW;EAAAoB,YAFV;AAAM","names":["HttpHeaders","Constants","UserService","constructor","httpClient","toastr","tokenService","router","BASE_URL","getAll","headers","set","getToken","get","baseUrl","localdata","localStorage","getItem","json","JSON","parse","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { TokenService } from '../helpers/token.service';\nimport { Router } from '@angular/router';\nimport { Constants } from 'src/app/models/Constants';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n    constructor(\n      private httpClient: HttpClient,\n      private toastr: ToastrService,\n      private tokenService: TokenService,\n      private router: Router\n    ) {}\n  \n    baseUrl: string = Constants.BASE_URL + 'users/';\n    \n    getAll(): Observable<User[]> {\n      const headers = new HttpHeaders().set(\n        'Authorization',\n        `Bearer ${this.getToken()}`\n      );\n      return this.httpClient.get<User[]>(this.baseUrl, { headers });\n    }\n\n    \n  getToken() {\n    var localdata = localStorage.getItem('data');\n    var json = JSON.parse(localdata ?? '');\n    return json['Token'];\n  }\n  }"]},"metadata":{},"sourceType":"module","externalDependencies":[]}