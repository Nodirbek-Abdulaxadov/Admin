{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/transfer.service\";\nimport * as i2 from \"@angular/router\";\nexport class TransferComponent {\n  constructor(transferService, actRoute, router, cdrf) {\n    this.transferService = transferService;\n    this.actRoute = actRoute;\n    this.router = router;\n    this.cdrf = cdrf;\n    this.page = 0;\n  }\n  ngOnInit() {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.page = Number(routeParams.get('page') ?? 1);\n    this.paging(this.page);\n  }\n  paging(pageNumber) {\n    this.page = Math.round(pageNumber);\n    if (pageNumber > this.transferService.pagination.CurrentPage && pageNumber > 3) {\n      pageNumber -= 1;\n    } else if (pageNumber < this.transferService.pagination.CurrentPage && pageNumber > 3) {\n      pageNumber += 1;\n    }\n    this.transfers = this.transferService.getPaged(this.page);\n    this.pagination = this.transferService.pagination;\n    this.router.navigate(['/transfers/page', this.page]);\n  }\n}\nTransferComponent.ɵfac = function TransferComponent_Factory(t) {\n  return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.TransferService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TransferComponent,\n  selectors: [[\"app-transfer\"]],\n  decls: 7,\n  vars: 0,\n  consts: [[1, \"coming-son\"], [1, \"text-center\"], [1, \"wave\"]],\n  template: function TransferComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n      i0.ɵɵtext(2, \"Ten kunda!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\");\n      i0.ɵɵelement(4, \"div\", 2)(5, \"div\", 2)(6, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAYA,OAAM,MAAOA,iBAAiB;EAM5BC,YACUC,eAAgC,EAChCC,QAAwB,EACxBC,MAAc,EACdC,IAAuB;IAHvB,oBAAe,GAAfH,eAAe;IACf,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IACN,SAAI,GAAJC,IAAI;IANP,SAAI,GAAW,CAAC;EAOpB;EAEHC,QAAQ;IACN,MAAMC,WAAW,GAAG,IAAI,CAACJ,QAAQ,CAACK,QAAQ,CAACC,QAAQ;IACnD,IAAI,CAACC,IAAI,GAAGC,MAAM,CAACJ,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChD,IAAI,CAACC,MAAM,CAAC,IAAI,CAACH,IAAI,CAAC;EACxB;EAGAG,MAAM,CAACC,UAAkB;IACvB,IAAI,CAACJ,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC;IAElC,IACEA,UAAU,GAAG,IAAI,CAACZ,eAAe,CAACe,UAAU,CAACC,WAAW,IACxDJ,UAAU,GAAG,CAAC,EACd;MACAA,UAAU,IAAI,CAAC;KAChB,MAAM,IACLA,UAAU,GAAG,IAAI,CAACZ,eAAe,CAACe,UAAU,CAACC,WAAW,IACxDJ,UAAU,GAAG,CAAC,EACd;MACAA,UAAU,IAAI,CAAC;;IAGjB,IAAI,CAACK,SAAS,GAAG,IAAI,CAACjB,eAAe,CAACkB,QAAQ,CAAC,IAAI,CAACV,IAAI,CAAC;IACzD,IAAI,CAACO,UAAU,GAAG,IAAI,CAACf,eAAe,CAACe,UAAU;IACjD,IAAI,CAACb,MAAM,CAACiB,QAAQ,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAACX,IAAI,CAAC,CAAC;EACtD;;AAtCWV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ9BC,8BAAwB;MACEA,0BAAU;MAAAA,iBAAK;MACvCA,2BAAK;MACFA,yBAAwB;MAG3BA,iBAAM","names":["TransferComponent","constructor","transferService","actRoute","router","cdrf","ngOnInit","routeParams","snapshot","paramMap","page","Number","get","paging","pageNumber","Math","round","pagination","CurrentPage","transfers","getPaged","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\transfer\\transfer.component.ts","C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\transfer\\transfer.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Pagination } from 'src/app/models/Pagination';\nimport { Transfer } from 'src/app/models/Transfer';\nimport { TransferService } from 'src/app/services/transfer.service';\n\n@Component({\n  selector: 'app-transfer',\n  templateUrl: './transfer.component.html',\n  styleUrls: ['./transfer.component.css'],\n})\nexport class TransferComponent implements OnInit {\n  transfers: Observable<Transfer[]> | undefined;\n  pagination: Pagination | undefined;\n\n  public page: number = 0;\n\n  constructor(\n    private transferService: TransferService,\n    private actRoute: ActivatedRoute,\n    private router: Router,\n    private cdrf: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    const routeParams = this.actRoute.snapshot.paramMap;\n    this.page = Number(routeParams.get('page') ?? 1);\n    this.paging(this.page);\n  }\n\n\n  paging(pageNumber: number) {\n    this.page = Math.round(pageNumber);\n\n    if (\n      pageNumber > this.transferService.pagination.CurrentPage &&\n      pageNumber > 3\n    ) {\n      pageNumber -= 1;\n    } else if (\n      pageNumber < this.transferService.pagination.CurrentPage &&\n      pageNumber > 3\n    ) {\n      pageNumber += 1;\n    }\n\n    this.transfers = this.transferService.getPaged(this.page);\n    this.pagination = this.transferService.pagination;\n    this.router.navigate(['/transfers/page', this.page]);\n  }\n}\n","<div class=\"coming-son\">\n  <h3 class=\"text-center\">Ten kunda!</h3>\n  <div>\n     <div class=\"wave\"></div>\n     <div class=\"wave\"></div>\n     <div class=\"wave\"></div>\n  </div>\n</div>\n\n\n\n<!-- <div class=\"d-flex justify-content-between\">\n    <h4 class=\"mb-0 text-uppercase mt-2\">O'tkazmalar jadvali</h4>\n    <a class=\"btn btn-success\" [routerLink]=\"['/product/add']\">+ Yangi qo'shish</a>\n  </div>\n  <hr />\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-striped table-bordered\">\n          <thead>\n            <tr>\n              <th>#ID</th>\n              <th>Ombordan</th>\n              <th>Omborga</th>\n              <th>O'tkazma sanasi</th>\n              <th>Admin</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colspan=\"7\" *ngIf=\"pagination!.TotalPages == 0\">\n                <h5 class=\"text-center\">Jadval bo'sh!</h5>\n              </td>\n            </tr>\n            <tr *ngFor=\"let item of transfers | async\">\n              <td>{{ item.id }}</td>\n              <td>{{ item.fromWarehouseName }}</td>\n              <td>{{ item.toWarehouseName }}</td>\n              <td>{{ item.transferDate }}</td>\n              <td>{{ item.adminFullName }}</td>\n              <td>\n                <div class=\"table-actions d-flex align-items-center gap-3 fs-6\">\n                  <button\n                    class=\"btn btn-primary\"\n                    data-bs-toggle=\"modal\"\n                    data-bs-target=\"#viewModal\"\n                    title=\"Batafsil\"\n                  >\n                    <i class=\"bi bi-eye-fill p-0 m-0\"></i>\n                  </button>\n                  <a\n                    class=\"btn btn-warning\"\n                    [routerLink]=\"['/product/edit', item.id]\"\n                  >\n                    <i class=\"bi bi-pencil-fill m-0 p-0\"></i>\n                  </a>\n                  <button\n                    class=\"btn btn-secondary\"\n                    data-bs-toggle=\"tooltip\"\n                    data-bs-placement=\"bottom\"\n                    title=\"Arxivlash\"\n                  >\n                    <i class=\"bi bi-archive p-0 m-0\"></i>\n                  </button>\n                  <button\n                    class=\"btn btn-danger\"\n                    data-bs-toggle=\"modal\"\n                    [attr.data-bs-target]=\"'#exampleDangerModal' + item.id\"\n                  >\n                    <i class=\"bi bi-trash-fill m-0 p-0\"></i>\n                  </button>\n                  <div class=\"col\">\n                    <div\n                      class=\"modal fade\"\n                      id=\"exampleDangerModal{{ item.id }}\"\n                      tabindex=\"-1\"\n                      aria-hidden=\"true\"\n                    >\n                      <div class=\"modal-dialog\">\n                        <div class=\"modal-content bg-danger\">\n                          <div class=\"modal-header\">\n                            <h5 class=\"modal-title text-white\">O'chirish</h5>\n                            <button\n                              type=\"button\"\n                              class=\"btn-close\"\n                              data-bs-dismiss=\"modal\"\n                              aria-label=\"Close\"\n                            ></button>\n                          </div>\n                          <div class=\"modal-body text-white\">\n                            <p>Rostdan ham o'chirmoqchimisiz?</p>\n                          </div>\n                          <div class=\"modal-footer gap-3 fs-6\">\n                            <button\n                              type=\"button\"\n                              style=\"width: 100px\"\n                              class=\"btn btn-secondary\"\n                              data-bs-dismiss=\"modal\"\n                            >\n                              Yo'q\n                            </button>\n                            <button\n                              data-bs-dismiss=\"modal\"\n                              type=\"button\"\n                              style=\"width: 100px\"\n                              class=\"btn btn-primary\"\n                            >\n                              Ha\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n  \n        <div class=\"col\">\n          <div class=\"modal fade\" id=\"viewModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n              <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                  <h5 class=\"modal-title\">Mahsulot haqida batafsil</h5>\n                  <button\n                    type=\"button\"\n                    class=\"btn-close\"\n                    data-bs-dismiss=\"modal\"\n                    aria-label=\"Close\"\n                  ></button>\n                </div>\n                <div class=\"modal-body\">\n                  <div class=\"row container\">\n                    <div class=\"col-md-6\">\n                      <label>Nomi:</label>\n                      <h5>{{ product.name }}</h5>\n                      <br />\n                      <label>Barcode:</label>\n                      <h5>{{ product.barcode }}</h5>\n                      <br />\n                      <label>Ishlab chiqarilgan joyi:</label>\n                      <h5>{{ product.madeIn }}</h5>\n                      <br />\n                      <label>Ogohlantirish soni:</label>\n                      <h5>{{ product.warningCount }}</h5>\n                      <br />\n                      <label>Yaratilgan vaqti:</label>\n                      <h5>\n                        {{ product.addedDate | date : \"MM/dd/YYYY h:mm a z\" }}\n                      </h5>\n                      <br />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <label>Mahsulot turi:</label>\n                      <h5>{{ product.categoryName }}</h5>\n                      <br />\n                      <label>Kategoriyasi:</label>\n                      <h5>{{ product.subcategoryName }}</h5>\n                      <br />\n                      <label>Admin:</label>\n                      <h5>{{ product.adminFullName }}</h5>\n                      <br />\n                      <label>Izoh:</label>\n                      <h5>{{ product.description }}</h5>\n                      <br />\n                      <label>Oxirgi tahrirlangan vaqti:</label>\n                      <h5>\n                        {{ product.modifiedDate | date : \"MM/dd/YYYY h:mm a z\" }}\n                      </h5>\n                      <br />\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"modal-footer gap-3 fs-6 d-flex justify-content-center\"\n                >\n                  <button\n                    type=\"button\"\n                    style=\"width: 120px\"\n                    class=\"btn btn-secondary\"\n                    data-bs-dismiss=\"modal\"\n                  >\n                    Yopish\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"d-flex justify-content-center\">\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination\"  *ngIf=\"pagination!.TotalPages < 4\">\n          <li *ngIf=\"pagination!.HasPrevious\" class=\"page-item\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage - 1)\"\n              aria-label=\"Previous\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li *ngIf=\"!pagination!.HasPrevious\" class=\"page-item disabled\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li\n            class=\"nimadir\"\n            *ngFor=\"\n              let j of [].constructor(pagination!.TotalPages);\n              let i = index\n            \"\n          >\n            <div\n              *ngIf=\"pagination!.CurrentPage == i + 1\"\n              class=\"page-item active\"\n            >\n              <a class=\"page-link\">{{ i + 1 }}</a>\n            </div>\n            <div *ngIf=\"pagination!.CurrentPage != i + 1\" class=\"page-item\">\n              <a class=\"page-link\" (click)=\"paging(i + 1)\">{{ i + 1 }}</a>\n            </div>\n          </li>\n          <li class=\"page-item\" *ngIf=\"pagination!.HasNext\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage + 1)\"\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n          <li class=\"page-item disabled\" *ngIf=\"!pagination!.HasNext\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n        <ul class=\"pagination\"  *ngIf=\"pagination!.TotalPages > 6 && pagination!.CurrentPage < 4\">\n          <li *ngIf=\"pagination!.HasPrevious\" class=\"page-item\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage - 1)\"\n              aria-label=\"Previous\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li *ngIf=\"!pagination!.HasPrevious\" class=\"page-item disabled\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == 1\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">1</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != 1\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(1)\">1</a>\n              </div>\n            </li>\n            <li>\n            <div class=\"page-item\">\n              <div\n              *ngIf=\"pagination!.CurrentPage == 2\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">2</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != 2\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(2)\">2</a>\n              </div>\n            </div></li>\n            <li>\n            <div class=\"page-item\">\n              <div\n              *ngIf=\"pagination!.CurrentPage == 3\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">3</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != 3\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(3)\">3</a>\n              </div>\n            </div></li>\n            <li>\n            <div class=\"page-item\">\n              <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages/2)\">...</a>\n            </div></li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages)\">{{ pagination!.TotalPages}}</a>\n              </div></li>\n          <li class=\"page-item\" *ngIf=\"pagination!.HasNext\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage + 1)\"\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n          <li class=\"page-item disabled\" *ngIf=\"!pagination!.HasNext\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n        <ul class=\"pagination\"  *ngIf=\"pagination!.TotalPages >= 6 && pagination!.CurrentPage > 3 && !(pagination!.TotalPages - pagination!.CurrentPage < 3)\">\n          <li *ngIf=\"pagination!.HasPrevious\" class=\"page-item\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage - 1)\"\n              aria-label=\"Previous\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li *ngIf=\"!pagination!.HasPrevious\" class=\"page-item disabled\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(1)\">{{ 1 }}</a>\n              </div>\n            </li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(page/2)\">...</a>\n              </div></li>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == page-1\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{page-1}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != page-1\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(page-1)\">{{page-1}}</a>\n              </div>\n          </li>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == page\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{page}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != page\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(page)\">{{ page }}</a>\n              </div>\n          </li>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == page+1\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{page+1}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != page+1\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(page+1)\">{{page+1}}</a>\n              </div>\n          </li>          \n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging((page+pagination!.TotalPages)/2)\">...</a>\n              </div></li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages)\">{{ pagination!.TotalPages}}</a>\n              </div></li>\n          <li class=\"page-item\" *ngIf=\"pagination!.HasNext\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage + 1)\"\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n          <li class=\"page-item disabled\" *ngIf=\"!pagination!.HasNext\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n        <ul class=\"pagination\"  *ngIf=\"pagination!.TotalPages > 6 && pagination!.TotalPages - pagination!.CurrentPage < 3\">\n          <li *ngIf=\"pagination!.HasPrevious\" class=\"page-item\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage - 1)\"\n              aria-label=\"Previous\"\n            >\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n          <li *ngIf=\"!pagination!.HasPrevious\" class=\"page-item disabled\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\n              <span aria-hidden=\"true\">&laquo;</span>\n            </a>\n          </li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(1)\">{{ 1 }}</a>\n              </div>\n            </li>\n            <li>\n              <div class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(page/2)\">...</a>\n              </div></li>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == pagination!.TotalPages-2\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{pagination!.TotalPages-2}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != pagination!.TotalPages-2\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages-2)\">{{pagination!.TotalPages-2}}</a>\n              </div>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == pagination!.TotalPages-1\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{pagination!.TotalPages-1}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != pagination!.TotalPages-1\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages-1)\">{{pagination!.TotalPages-1}}</a>\n              </div>\n            <li>\n              <div\n              *ngIf=\"pagination!.CurrentPage == pagination!.TotalPages\"\n              class=\"page-item active\"\n              >\n                <a class=\"page-link\">{{pagination!.TotalPages}}</a>\n              </div>\n              <div *ngIf=\"pagination!.CurrentPage != pagination!.TotalPages\" class=\"page-item\">\n                <a class=\"page-link\" (click)=\"paging(pagination!.TotalPages)\">{{pagination!.TotalPages}}</a>\n              </div></li>\n          <li class=\"page-item\" *ngIf=\"pagination!.HasNext\">\n            <a\n              class=\"page-link\"\n              (click)=\"paging(pagination!.CurrentPage + 1)\"\n              aria-label=\"Next\"\n            >\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n          <li class=\"page-item disabled\" *ngIf=\"!pagination!.HasNext\">\n            <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\n              <span aria-hidden=\"true\">&raquo;</span>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n   -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}