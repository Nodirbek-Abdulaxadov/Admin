{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map, share, tap } from 'rxjs';\nimport { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport let CustomerService = /*#__PURE__*/(() => {\n  class CustomerService {\n    constructor(httpClient, toastr) {\n      this.httpClient = httpClient;\n      this.toastr = toastr;\n      this.baseUrl = Constants.BASE_URL + 'customer/';\n      this.pagination = {\n        HasPrevious: false,\n        HasNext: false,\n        TotalCount: 0,\n        PageSize: 10,\n        CurrentPage: 1,\n        TotalPages: 0\n      };\n    }\n    getAll() {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      return this.httpClient.get(this.baseUrl, {\n        headers\n      });\n    }\n    getPaged(pageNumber) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      const url = `${this.baseUrl}paged?pageSize=10&pageNumber=${pageNumber}`;\n      return this.httpClient.get(url, {\n        headers,\n        observe: 'response'\n      }).pipe(tap(response => {\n        const paginationHeader = response.headers.get('x-pagination');\n        var xpagination = JSON.parse(paginationHeader ?? '');\n        this.initPaginationParams(xpagination);\n      }), share(), map(response => response.body));\n    }\n    add(form) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.post(this.baseUrl, form, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success(\"Muvofaqqiyatli qo'shildi!\").onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000\n          });\n        }\n      });\n    }\n    edit(customer) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.put(this.baseUrl, customer, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success('Muvofaqqiyatli saqlandi!').onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000\n          });\n        }\n      });\n    }\n    remove(id) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.delete(this.baseUrl + id, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success(\"Muvofaqqiyatli o'chirildi!\").onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000\n          });\n        }\n      });\n    }\n    archive(id) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.put(this.baseUrl + 'archive/' + id, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success('Muvofaqqiyatli arxivlandi!').onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            easeTime: 3000\n          });\n        }\n      });\n    }\n    recover(id) {\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n      this.httpClient.put(this.baseUrl + 'recover/' + id, {\n        headers\n      }).subscribe({\n        next: data => {\n          this.toastr.success('Muvofaqqiyatli arxivlandi!').onHidden.subscribe(() => {\n            window.location.reload();\n          });\n        },\n        error: error => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            easeTime: 3000\n          });\n        }\n      });\n    }\n    initPaginationParams(xpagination) {\n      this.pagination.HasPrevious = xpagination['HasPrevious'];\n      this.pagination.HasNext = xpagination['HasNext'];\n      this.pagination.TotalCount = xpagination['TotalCount'];\n      this.pagination.CurrentPage = xpagination['CurrentPage'];\n      this.pagination.PageSize = xpagination['PageSize'];\n      this.pagination.TotalPages = xpagination['TotalPages'];\n    }\n    getToken() {\n      var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata ?? '');\n      return json['Token'];\n    }\n  }\n  CustomerService.ɵfac = function CustomerService_Factory(t) {\n    return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n  };\n  CustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerService,\n    factory: CustomerService.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomerService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}