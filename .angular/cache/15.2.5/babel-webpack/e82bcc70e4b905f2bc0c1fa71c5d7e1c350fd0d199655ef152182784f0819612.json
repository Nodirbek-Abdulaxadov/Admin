{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet WarehouseComponent = class WarehouseComponent {\n  constructor(warehouseService, formBuilder) {\n    this.warehouseService = warehouseService;\n    this.formBuilder = formBuilder;\n    this.nameValid = false;\n    this.pageNumbers = new Array();\n    this.name = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]);\n    this.addWarehouseForm = this.formBuilder.group({\n      name: this.name\n    });\n  }\n  ngOnInit() {\n    this.warehouses = this.warehouseService.getPaged(1);\n    this.pagination = this.warehouseService.pagination;\n  }\n  addNew() {\n    this.warehouseService.add(this.addWarehouseForm.getRawValue());\n  }\n  remove(id) {\n    this.warehouseService.remove(id);\n  }\n  archive(id) {}\n  openEditModal(model) {\n    this.warehouse = model;\n    var name = document.getElementById('warehouseName');\n    name?.setAttribute('value', model.name);\n  }\n  check() {\n    var name = document.getElementById('warehouseName').value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    } else {\n      this.nameValid = true;\n    }\n  }\n  edit() {\n    this.warehouse.name = document.getElementById('warehouseName').value;\n    this.warehouseService.edit(this.warehouse);\n  }\n  paging(pageNumber) {\n    this.warehouses = this.warehouseService.getPaged(pageNumber);\n    this.pagination = this.warehouseService.pagination;\n  }\n};\nWarehouseComponent = __decorate([Component({\n  selector: 'app-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.css']\n})], WarehouseComponent);\nexport { WarehouseComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsBC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAW9D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAQ7BC,YAAoBC,gBAAkC,EAClCC,WAAwB;IADxB,qBAAgB,GAAhBD,gBAAgB;IAChB,gBAAW,GAAXC,WAAW;IAL/B,cAAS,GAAY,KAAK;IAC1B,gBAAW,GAAG,IAAIC,KAAK,EAAE;IAUzB,SAAI,GAAG,IAAIN,WAAW,CAAC,EAAE,EAAE,CACzBC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,SAAS,CAAC,CAAC,CAAC,EACvBP,UAAU,CAACQ,SAAS,CAAC,GAAG,CAAC,CAC1B,CAAC;IAEK,qBAAgB,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC/CC,IAAI,EAAE,IAAI,CAACA;KACZ,CAAC;EAd6C;EAE/CC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACT,gBAAgB,CAACU,QAAQ,CAAC,CAAC,CAAC;IACnD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACX,gBAAgB,CAACW,UAAU;EACpD;EAWAC,MAAM;IACJ,IAAI,CAACZ,gBAAgB,CAACa,GAAG,CAAC,IAAI,CAACC,gBAAgB,CAACC,WAAW,EAAE,CAAC;EAChE;EAEAC,MAAM,CAACC,EAAU;IACf,IAAI,CAACjB,gBAAgB,CAACgB,MAAM,CAACC,EAAE,CAAC;EAClC;EAEAC,OAAO,CAACD,EAAU,GAElB;EAEAE,aAAa,CAACC,KAAgB;IAC1B,IAAI,CAACC,SAAS,GAAGD,KAAK;IACtB,IAAIb,IAAI,GAAGe,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;IACnDhB,IAAI,EAAEiB,YAAY,CAAC,OAAO,EAAEJ,KAAK,CAACb,IAAI,CAAC;EAC3C;EAEAkB,KAAK;IACH,IAAIlB,IAAI,GAAIe,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAsB,CAACG,KAAK;IAC/E,IAAInB,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,CAACoB,MAAM,GAAG,CAAC,EAAE;MACjD,IAAI,CAACC,SAAS,GAAG,KAAK;KACvB,MACI;MACH,IAAI,CAACA,SAAS,GAAG,IAAI;;EAEzB;EAEAC,IAAI;IACF,IAAI,CAACR,SAAS,CAACd,IAAI,GAAIe,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAsB,CAACG,KAAK;IAC1F,IAAI,CAAC1B,gBAAgB,CAAC6B,IAAI,CAAC,IAAI,CAACR,SAAS,CAAC;EAC5C;EAEAS,MAAM,CAACC,UAAkB;IACvB,IAAI,CAACtB,UAAU,GAAG,IAAI,CAACT,gBAAgB,CAACU,QAAQ,CAACqB,UAAU,CAAC;IAC5D,IAAI,CAACpB,UAAU,GAAG,IAAI,CAACX,gBAAgB,CAACW,UAAU;EACpD;CACD;AA9DYb,kBAAkB,eAL9BH,SAAS,CAAC;EACTqC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWpC,kBAAkB,CA8D9B;SA9DYA,kBAAkB","names":["Component","FormControl","Validators","WarehouseComponent","constructor","warehouseService","formBuilder","Array","required","minLength","maxLength","group","name","ngOnInit","warehouses","getPaged","pagination","addNew","add","addWarehouseForm","getRawValue","remove","id","archive","openEditModal","model","warehouse","document","getElementById","setAttribute","check","value","length","nameValid","edit","paging","pageNumber","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\warehouse\\warehouse.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Observable} from 'rxjs';\nimport { Pagination } from 'src/app/models/Pagination';\nimport { Warehouse } from 'src/app/models/warehouse';\nimport { WarehouseService } from 'src/app/services/warehouse/warehouse.service';\n\n@Component({\n  selector: 'app-warehouse',\n  templateUrl: './warehouse.component.html',\n  styleUrls: ['./warehouse.component.css']\n})\nexport class WarehouseComponent implements OnInit{\n  warehouses: Observable<Warehouse[]> | undefined;\n  nameField: any;\n  warehouse: any;\n  nameValid: boolean = false;\n  pageNumbers = new Array();\n  public pagination: Pagination | undefined;\n\n  constructor(private warehouseService: WarehouseService,           \n              private formBuilder: FormBuilder,){}\n\n  ngOnInit(): void {\n    this.warehouses = this.warehouseService.getPaged(1);\n    this.pagination = this.warehouseService.pagination;\n  }\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(100)\n  ]);\n\n  public addWarehouseForm = this.formBuilder.group({\n    name: this.name\n  });\n\n  addNew() {\n    this.warehouseService.add(this.addWarehouseForm.getRawValue());\n  }\n\n  remove(id: number) {\n    this.warehouseService.remove(id);\n  }\n\n  archive(id: number) {\n    \n  }\n\n  openEditModal(model: Warehouse) {\n      this.warehouse = model;\n      var name = document.getElementById('warehouseName');\n      name?.setAttribute('value', model.name);\n  }\n\n  check() {\n    var name = (document.getElementById('warehouseName') as HTMLInputElement).value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    }\n    else {\n      this.nameValid = true;\n    }\n  }\n\n  edit() {\n    this.warehouse.name = (document.getElementById('warehouseName') as HTMLInputElement).value;\n    this.warehouseService.edit(this.warehouse)\n  }\n\n  paging(pageNumber: number) {\n    this.warehouses = this.warehouseService.getPaged(pageNumber);\n    this.pagination = this.warehouseService.pagination;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}