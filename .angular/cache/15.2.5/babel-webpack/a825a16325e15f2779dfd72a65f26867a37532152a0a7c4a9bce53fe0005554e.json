{"ast":null,"code":"import { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/router\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(httpClient, toastr, router) {\n      this.httpClient = httpClient;\n      this.toastr = toastr;\n      this.router = router;\n      this.url = Constants.BASE_URL + \"auth/\";\n      this.date1 = new Date();\n      this.date2 = new Date();\n    }\n    refreshToken() {\n      var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata ?? \"\");\n      var token = json[\"Token\"];\n      var expiresAt = localStorage.getItem('loggedDate');\n      this.date1 = new Date(expiresAt ?? \"\");\n      if (this.date2.getDay() - this.date1.getDay() > 0 || expiresAt == null) {\n        var refreshToken = json[\"RefreshToken\"];\n        var body = {\n          \"token\": token,\n          \"refreshToken\": refreshToken\n        };\n        this.httpClient.post(this.url + 'refresh-user', body, {\n          withCredentials: true\n        }).subscribe({\n          next: data => {\n            localStorage.clear();\n            localStorage.setItem(\"data\", JSON.stringify(data));\n            localStorage.setItem('loggedDate', this.date2.toString());\n            this.toastr.success('Token updated!');\n          },\n          error: error => {\n            switch (error.status) {\n              case 400:\n                {\n                  localStorage.clear();\n                  this.toastr.error(\"Bad request!\");\n                }\n                break;\n              case 401:\n                {\n                  localStorage.clear();\n                  this.toastr.error(\"Token expired!\");\n                }\n                break;\n            }\n          }\n        });\n      }\n    }\n    login(form) {\n      console.log(form);\n      this.httpClient.post(this.url + 'login', form, {\n        withCredentials: true\n      }).subscribe({\n        next: data => {\n          localStorage.setItem(\"data\", JSON.stringify(data));\n          this.toastr.success('Successfully logged in!');\n          localStorage.setItem('loggedDate', this.date2.toString());\n          //this.router.navigate(['/']);\n        },\n\n        error: error => {\n          console.log(error);\n          switch (error.status) {\n            case 400:\n              {\n                this.toastr.error(\"Nimadir xato!\");\n              }\n              break;\n            case 401:\n              this.toastr.error(\"Telefon raqam yoki parol noto'g'ri kiritilgan!\");\n              break;\n            //case 0: this.router.navigate(['/server-error']); break;\n          }\n        }\n      });\n    }\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.Router));\n  };\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}