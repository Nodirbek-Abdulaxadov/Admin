{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet CategoryComponent = class CategoryComponent {\n  constructor(categoryService, formBuilder) {\n    this.categoryService = categoryService;\n    this.formBuilder = formBuilder;\n    this.nameValid = false;\n    this.name = new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]);\n    this.addNewForm = this.formBuilder.group({\n      name: this.name\n    });\n  }\n  ngOnInit() {\n    this.categories = this.categoryService.getPaged(1);\n    this.pagination = this.categoryService.pagination;\n  }\n  add() {\n    this.categoryService.add(this.addNewForm.getRawValue());\n  }\n  remove(id) {\n    this.categoryService.remove(id);\n  }\n  archive(id) {\n    this.categoryService.archive(id);\n  }\n  openEditModal(model) {\n    this.category = model;\n    var name = document.getElementById('categoryName');\n    name?.setAttribute('value', model.name);\n  }\n  check() {\n    var name = document.getElementById('categoryName').value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    } else {\n      this.nameValid = true;\n    }\n  }\n  edit() {\n    this.category.name = document.getElementById('categoryName').value;\n    this.categoryService.edit(this.category);\n  }\n  paging(pageNumber) {\n    this.categories = this.categoryService.getPaged(pageNumber);\n    this.pagination = this.categoryService.pagination;\n  }\n};\nCategoryComponent = __decorate([Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})], CategoryComponent);\nexport { CategoryComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAsBC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAW9D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO5BC,YAAoBC,eAAgC,EAChCC,WAAwB;IADxB,oBAAe,GAAfD,eAAe;IACf,gBAAW,GAAXC,WAAW;IAJ/B,cAAS,GAAY,KAAK;IAU1B,SAAI,GAAG,IAAIL,WAAW,CAAC,EAAE,EAAE,CACzBC,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,EACvBN,UAAU,CAACO,SAAS,CAAC,GAAG,CAAC,CAC1B,CAAC;IAEK,eAAU,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzCC,IAAI,EAAE,IAAI,CAACA;KACZ,CAAC;EAd6C;EAE/CC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI,CAACR,eAAe,CAACS,QAAQ,CAAC,CAAC,CAAC;IAClD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,eAAe,CAACU,UAAU;EACnD;EAWAC,GAAG;IACD,IAAI,CAACX,eAAe,CAACW,GAAG,CAAC,IAAI,CAACC,UAAU,CAACC,WAAW,EAAE,CAAC;EACzD;EAEAC,MAAM,CAACC,EAAU;IACf,IAAI,CAACf,eAAe,CAACc,MAAM,CAACC,EAAE,CAAC;EACjC;EAEAC,OAAO,CAACD,EAAU;IAChB,IAAI,CAACf,eAAe,CAACgB,OAAO,CAACD,EAAE,CAAC;EAClC;EAEAE,aAAa,CAACC,KAAe;IACzB,IAAI,CAACC,QAAQ,GAAGD,KAAK;IACrB,IAAIZ,IAAI,GAAGc,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAClDf,IAAI,EAAEgB,YAAY,CAAC,OAAO,EAAEJ,KAAK,CAACZ,IAAI,CAAC;EAC3C;EAEAiB,KAAK;IACH,IAAIjB,IAAI,GAAIc,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAsB,CAACG,KAAK;IAC9E,IAAIlB,IAAI,IAAI,IAAI,IAAIA,IAAI,IAAI,EAAE,IAAIA,IAAI,CAACmB,MAAM,GAAG,CAAC,EAAE;MACjD,IAAI,CAACC,SAAS,GAAG,KAAK;KACvB,MACI;MACH,IAAI,CAACA,SAAS,GAAG,IAAI;;EAEzB;EAEAC,IAAI;IACF,IAAI,CAACR,QAAQ,CAACb,IAAI,GAAIc,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAsB,CAACG,KAAK;IACxF,IAAI,CAACxB,eAAe,CAAC2B,IAAI,CAAC,IAAI,CAACR,QAAQ,CAAC;EAC1C;EAEAS,MAAM,CAACC,UAAkB;IACvB,IAAI,CAACrB,UAAU,GAAG,IAAI,CAACR,eAAe,CAACS,QAAQ,CAACoB,UAAU,CAAC;IAC3D,IAAI,CAACnB,UAAU,GAAG,IAAI,CAACV,eAAe,CAACU,UAAU;EACnD;CACD;AA7DYZ,iBAAiB,eAL7BH,SAAS,CAAC;EACTmC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWlC,iBAAiB,CA6D7B;SA7DYA,iBAAiB","names":["Component","FormControl","Validators","CategoryComponent","constructor","categoryService","formBuilder","required","minLength","maxLength","group","name","ngOnInit","categories","getPaged","pagination","add","addNewForm","getRawValue","remove","id","archive","openEditModal","model","category","document","getElementById","setAttribute","check","value","length","nameValid","edit","paging","pageNumber","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\category\\category.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Category } from 'src/app/models/Category';\nimport { Pagination } from 'src/app/models/Pagination';\nimport { CategoryService } from 'src/app/services/category/category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.css']\n})\nexport class CategoryComponent {\n  categories: Observable<Category[]> | undefined;\n  nameField: any;\n  category: any;\n  nameValid: boolean = false;\n  public pagination: Pagination | undefined;\n\n  constructor(private categoryService: CategoryService,           \n              private formBuilder: FormBuilder,){}\n\n  ngOnInit(): void {\n    this.categories = this.categoryService.getPaged(1);\n    this.pagination = this.categoryService.pagination;\n  }\n  name = new FormControl('', [\n    Validators.required,\n    Validators.minLength(3),\n    Validators.maxLength(100)\n  ]);\n\n  public addNewForm = this.formBuilder.group({\n    name: this.name\n  });\n\n  add() {\n    this.categoryService.add(this.addNewForm.getRawValue());\n  }\n\n  remove(id: number) {\n    this.categoryService.remove(id);\n  }\n\n  archive(id: number) {\n    this.categoryService.archive(id);\n  }\n\n  openEditModal(model: Category) {\n      this.category = model;\n      var name = document.getElementById('categoryName');\n      name?.setAttribute('value', model.name);\n  }\n\n  check() {\n    var name = (document.getElementById('categoryName') as HTMLInputElement).value;\n    if (name == null || name == \"\" || name.length < 3) {\n      this.nameValid = false;\n    }\n    else {\n      this.nameValid = true;\n    }\n  }\n\n  edit() {\n    this.category.name = (document.getElementById('categoryName') as HTMLInputElement).value;\n    this.categoryService.edit(this.category)\n  }\n\n  paging(pageNumber: number) {\n    this.categories = this.categoryService.getPaged(pageNumber);\n    this.pagination = this.categoryService.pagination;\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}