{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Constants } from 'src/app/models/Constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"../helpers/token.service\";\nimport * as i4 from \"@angular/router\";\nexport class UserService {\n  constructor(httpClient, toastr, tokenService, router) {\n    this.httpClient = httpClient;\n    this.toastr = toastr;\n    this.tokenService = tokenService;\n    this.router = router;\n    this.baseUrl = Constants.BASE_URL + 'users/';\n  }\n  getAll(role) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    return this.httpClient.get(this.baseUrl + role, {\n      headers\n    });\n  }\n  add(form) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    this.httpClient.post(Constants.BASE_URL + 'auth/register', form, {\n      headers\n    }).subscribe({\n      next: data => {\n        this.toastr.success(\"Muvofaqqiyatli qo'shildi!\").onHidden.subscribe(() => {\n          window.location.reload();\n        });\n      },\n      error: error => {\n        this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n          timeOut: 3000\n        });\n      }\n    });\n  }\n  edit(form) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.getToken()}`);\n    this.httpClient.put(Constants.BASE_URL + 'auth/update', form, {\n      headers\n    }).subscribe({\n      next: data => {\n        this.toastr.success('Muvofaqqiyatli saqlandi!').onHidden.subscribe(() => {\n          window.location.reload();\n        });\n      },\n      error: error => {\n        this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n          timeOut: 3000\n        });\n      }\n    });\n  }\n  getToken() {\n    var localdata = localStorage.getItem('data');\n    var json = JSON.parse(localdata ?? '');\n    return json['Token'];\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService), i0.ɵɵinject(i3.TokenService), i0.ɵɵinject(i4.Router));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAK9D,SAASC,SAAS,QAAQ,0BAA0B;;;;;;AAOpD,OAAM,MAAOC,WAAW;EACtBC,YACUC,UAAsB,EACtBC,MAAqB,EACrBC,YAA0B,EAC1BC,MAAc;IAHd,eAAU,GAAVH,UAAU;IACV,WAAM,GAANC,MAAM;IACN,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IAGhB,YAAO,GAAWN,SAAS,CAACO,QAAQ,GAAG,QAAQ;EAF5C;EAIHC,MAAM,CAACC,IAAY;IACjB,MAAMC,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,QAAQ,EAAE,EAAE,CAC5B;IACD,OAAO,IAAI,CAACT,UAAU,CAACU,GAAG,CAAS,IAAI,CAACC,OAAO,GAAGL,IAAI,EAAE;MAAEC;IAAO,CAAE,CAAC;EACtE;EAEAK,GAAG,CAACC,IAAS;IACX,MAAMN,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,QAAQ,EAAE,EAAE,CAC5B;IACD,IAAI,CAACT,UAAU,CACZc,IAAI,CAACjB,SAAS,CAACO,QAAQ,GAAG,eAAe,EAAES,IAAI,EAAE;MAAEN;IAAO,CAAE,CAAC,CAC7DQ,SAAS,CAAC;MACTC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAAChB,MAAM,CACRiB,OAAO,CAAC,2BAA2B,CAAC,CACpCC,QAAQ,CAACJ,SAAS,CAAC,MAAK;UACvBK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC1B,CAAC,CAAC;MACN,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACtB,MAAM,CAACsB,KAAK,CAAC,8BAA8B,EAAE,EAAE,EAAE;UACpDC,OAAO,EAAE;SACV,CAAC;MACJ;KACD,CAAC;EACN;EAEAC,IAAI,CAACZ,IAAS;IACZ,MAAMN,OAAO,GAAG,IAAIX,WAAW,EAAE,CAACY,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,QAAQ,EAAE,EAAE,CAC5B;IACD,IAAI,CAACT,UAAU,CAAC0B,GAAG,CAAC7B,SAAS,CAACO,QAAQ,GAAG,aAAa,EAAES,IAAI,EAAE;MAAEN;IAAO,CAAE,CAAC,CAACQ,SAAS,CAAC;MACnFC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAAChB,MAAM,CACRiB,OAAO,CAAC,0BAA0B,CAAC,CACnCC,QAAQ,CAACJ,SAAS,CAAC,MAAK;UACvBK,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAC1B,CAAC,CAAC;MACN,CAAC;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACtB,MAAM,CAACsB,KAAK,CAAC,8BAA8B,EAAE,EAAE,EAAE;UACpDC,OAAO,EAAE;SACV,CAAC;MACJ;KACD,CAAC;EACJ;EAEAf,QAAQ;IACN,IAAIkB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,IAAI,EAAE,CAAC;IACtC,OAAOG,IAAI,CAAC,OAAO,CAAC;EACtB;;AAlEWhC,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmC,SAAXnC,WAAW;EAAAoC,YAFV;AAAM","names":["HttpHeaders","Constants","UserService","constructor","httpClient","toastr","tokenService","router","BASE_URL","getAll","role","headers","set","getToken","get","baseUrl","add","form","post","subscribe","next","data","success","onHidden","window","location","reload","error","timeOut","edit","put","localdata","localStorage","getItem","json","JSON","parse","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\services\\user\\user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { TokenService } from '../helpers/token.service';\nimport { Router } from '@angular/router';\nimport { Constants } from 'src/app/models/Constants';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/models/User';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(\n    private httpClient: HttpClient,\n    private toastr: ToastrService,\n    private tokenService: TokenService,\n    private router: Router\n  ) {}\n\n  baseUrl: string = Constants.BASE_URL + 'users/';\n\n  getAll(role: string): Observable<User[]> {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.getToken()}`\n    );\n    return this.httpClient.get<User[]>(this.baseUrl + role, { headers });\n  }\n\n  add(form: any) {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.getToken()}`\n    );\n    this.httpClient\n      .post(Constants.BASE_URL + 'auth/register', form, { headers })\n      .subscribe({\n        next: (data) => {\n          this.toastr\n            .success(\"Muvofaqqiyatli qo'shildi!\")\n            .onHidden.subscribe(() => {\n              window.location.reload();\n            });\n        },\n        error: (error) => {\n          this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n            timeOut: 3000,\n          });\n        },\n      });\n  }\n\n  edit(form: any) {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.getToken()}`\n    );\n    this.httpClient.put(Constants.BASE_URL + 'auth/update', form, { headers }).subscribe({\n      next: (data) => {\n        this.toastr\n          .success('Muvofaqqiyatli saqlandi!')\n          .onHidden.subscribe(() => {\n            window.location.reload();\n          });\n      },\n      error: (error) => {\n        this.toastr.error('Qandaydir xatolik yuz berdi!', '', {\n          timeOut: 3000,\n        });\n      },\n    });\n  }\n\n  getToken() {\n    var localdata = localStorage.getItem('data');\n    var json = JSON.parse(localdata ?? '');\n    return json['Token'];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}