{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nlet NewWarehouseItemComponent = class NewWarehouseItemComponent {\n  constructor(formBuilder, warehouseService, warehouseItemService, productService, toastr) {\n    this.formBuilder = formBuilder;\n    this.warehouseService = warehouseService;\n    this.warehouseItemService = warehouseItemService;\n    this.productService = productService;\n    this.toastr = toastr;\n    this.warehouses = [];\n    this.products = [];\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n    this.quantity = new FormControl(0, [Validators.required]);\n    this.broughtDate = new FormControl('', [Validators.required, Validators.nullValidator]);\n    this.incomingPrice = new FormControl(0, [Validators.required]);\n    this.sellingPrice = new FormControl(0, [Validators.required]);\n    this.productId = new FormControl(0, [Validators.required, Validators.nullValidator]);\n    this.adminId = new FormControl('');\n    this.warehouseId = new FormControl('', [Validators.required, Validators.nullValidator]);\n    this.addNewForm = this.formBuilder.group({\n      quantity: this.quantity,\n      broughtDate: this.broughtDate,\n      incomingPrice: this.incomingPrice,\n      sellingPrice: this.sellingPrice,\n      productId: this.productId,\n      adminId: this.adminId,\n      warehouseId: this.warehouseId\n    });\n  }\n  ngOnInit() {\n    this.warehouseService.getAll().subscribe(data => {\n      this.warehouses = data;\n    });\n    this.productService.getAll().subscribe(data => this.products = data);\n    this.checkProductId();\n  }\n  focusOnScan() {\n    var element = document.getElementById('barcodeInput');\n    element.focus();\n  }\n  scanned(event) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      var barcode = document.getElementById('barcodeInput');\n      var product = this.products.filter(p => p.barcode == barcode.value)[0];\n      this.selectProduct(product.id);\n    }\n  }\n  clearbarcode() {\n    var input = document.getElementById('barcodeInput');\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n  clearsearch() {\n    var input = document.getElementById('productSearchText');\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n  clearProductSelection() {\n    var input = document.getElementById('pname');\n    input.innerText = '';\n    input = document.getElementById('pmadeIn');\n    input.innerText = '';\n    input = document.getElementById('pcategoryName');\n    input.innerText = '';\n    input = document.getElementById('psubcategoryName');\n    input.innerText = '';\n    input = document.getElementById('description');\n    input.innerText = '';\n    this.cancelSelection();\n  }\n  selectProduct(id) {\n    this.productService.getById(id).subscribe(data => {\n      this.selectedProduct = data;\n      this.addNewForm.controls.productId.setValue(id);\n      this.setInformations();\n      this.checkProductId();\n    });\n  }\n  selectByName() {\n    var input = document.getElementById('productSearchText');\n    var product = this.products.filter(p => p.name == input.value)[0];\n    this.selectProduct(product.id);\n  }\n  cancelSelection() {\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n  }\n  setInformations() {\n    var input = document.getElementById('pname');\n    input.innerText = this.selectedProduct.name;\n    input = document.getElementById('pmadeIn');\n    input.innerText = this.selectedProduct.madeIn;\n    input = document.getElementById('pcategoryName');\n    input.innerText = this.selectedProduct.categoryName;\n    input = document.getElementById('psubcategoryName');\n    input.innerText = this.selectedProduct.subcategoryName;\n    input = document.getElementById('description');\n    input.innerText = this.selectedProduct.description;\n  }\n  checkProductId() {\n    var message = document.getElementById('productIdErrorMessage');\n    if (this.selectedProduct.id == 0) {\n      message.classList.remove('d-none');\n    } else {\n      message.classList.add('d-none');\n    }\n  }\n  add() {\n    this.productService.add(this.addNewForm.getRawValue());\n  }\n};\nNewWarehouseItemComponent = __decorate([Component({\n  selector: 'app-new-warehouse-item',\n  templateUrl: './new-warehouse-item.component.html',\n  styleUrls: ['./new-warehouse-item.component.css']\n})], NewWarehouseItemComponent);\nexport { NewWarehouseItemComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","NewWarehouseItemComponent","constructor","formBuilder","warehouseService","warehouseItemService","productService","toastr","id","name","description","madeIn","barcode","warningCount","subcategoryId","subcategoryName","categoryId","categoryName","adminId","adminFullName","addedDate","Date","modifiedDate","required","nullValidator","group","quantity","broughtDate","incomingPrice","sellingPrice","productId","warehouseId","ngOnInit","getAll","subscribe","data","warehouses","products","checkProductId","focusOnScan","element","document","getElementById","focus","scanned","event","keyCode","preventDefault","product","filter","p","value","selectProduct","clearbarcode","input","clearProductSelection","clearsearch","innerText","cancelSelection","getById","selectedProduct","addNewForm","controls","setValue","setInformations","selectByName","message","classList","remove","add","getRawValue","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\components\\warehouse-item\\new-warehouse-item\\new-warehouse-item.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Product } from 'src/app/models/Product';\nimport { Warehouse } from 'src/app/models/warehouse';\nimport { ProductService } from 'src/app/services/product/product.service';\nimport { WarehouseService } from 'src/app/services/warehouse/warehouse.service';\n\n@Component({\n  selector: 'app-new-warehouse-item',\n  templateUrl: './new-warehouse-item.component.html',\n  styleUrls: ['./new-warehouse-item.component.css'],\n})\nexport class NewWarehouseItemComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private warehouseService: WarehouseService,\n    private warehouseItemService: Ware\n    private productService: ProductService,\n    private toastr: ToastrService\n  ) {}\n\n  warehouses: Warehouse[] = [];\n  products: Product[] = [];\n  selectedProduct: Product = {\n    id: 0,\n    name: '',\n    description: '',\n    madeIn: '',\n    barcode: '',\n    warningCount: 0,\n    subcategoryId: 0,\n    subcategoryName: '',\n    categoryId: 0,\n    categoryName: '',\n    adminId: '',\n    adminFullName: '',\n    addedDate: new Date(),\n    modifiedDate: new Date()\n  };\n\n  ngOnInit(): void {\n    this.warehouseService.getAll().subscribe((data) => {\n      this.warehouses = data;\n    });\n    this.productService.getAll().subscribe((data) => this.products = data);\n    this.checkProductId();\n  }\n\n  quantity = new FormControl(0, [\n    Validators.required\n  ]);\n\n  broughtDate = new FormControl('', [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  incomingPrice = new FormControl(0, [\n    Validators.required,\n  ]);\n\n  sellingPrice = new FormControl(0, [\n    Validators.required,\n  ]);\n\n  productId = new FormControl(0, [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  adminId = new FormControl('');\n\n  warehouseId = new FormControl('', [\n    Validators.required,\n    Validators.nullValidator,\n  ]);\n\n  public addNewForm = this.formBuilder.group({\n    quantity: this.quantity,\n    broughtDate: this.broughtDate,\n    incomingPrice: this.incomingPrice,\n    sellingPrice: this.sellingPrice,\n    productId: this.productId,\n    adminId: this.adminId,\n    warehouseId: this.warehouseId\n  });\n\n  focusOnScan() {\n    var element = document.getElementById('barcodeInput') as HTMLInputElement;\n    element.focus();\n  }\n\n  scanned(event: any) {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      var barcode = document.getElementById('barcodeInput') as HTMLInputElement;\n      var product = this.products.filter(p => p.barcode == barcode.value)[0];\n      this.selectProduct(product.id);\n    }\n  }\n\n  clearbarcode() {\n    var input = document.getElementById('barcodeInput') as HTMLInputElement;\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();\n  }\n\n  clearsearch() {\n    var input = document.getElementById('productSearchText') as HTMLInputElement;\n    input.value = '';\n    this.clearProductSelection();\n    this.checkProductId();  \n  }\n\n  clearProductSelection() {\n    var input = document.getElementById('pname') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('pmadeIn') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('pcategoryName') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('psubcategoryName') as HTMLInputElement;\n    input.innerText = '';\n    input = document.getElementById('description') as HTMLInputElement;\n    input.innerText = '';\n    this.cancelSelection();\n  }\n\n  selectProduct(id: number){\n    this.productService.getById(id).subscribe(data => {\n      this.selectedProduct = data;\n      this.addNewForm.controls.productId.setValue(id);\n      this.setInformations();\n      this.checkProductId();\n    });\n  }\n\n  selectByName() {\n    var input = document.getElementById('productSearchText') as HTMLInputElement;\n    var product = this.products.filter(p => p.name == input.value)[0];\n    this.selectProduct(product.id);\n  }\n\n  cancelSelection() {\n    this.selectedProduct = {\n      id: 0,\n      name: '',\n      description: '',\n      madeIn: '',\n      barcode: '',\n      warningCount: 0,\n      subcategoryId: 0,\n      subcategoryName: '',\n      categoryId: 0,\n      categoryName: '',\n      adminId: '',\n      adminFullName: '',\n      addedDate: new Date(),\n      modifiedDate: new Date()\n    };\n  }\n\n  setInformations() {\n    var input = document.getElementById('pname') as HTMLInputElement;\n    input.innerText = this.selectedProduct.name;\n    input = document.getElementById('pmadeIn') as HTMLInputElement;\n    input.innerText = this.selectedProduct.madeIn;\n    input = document.getElementById('pcategoryName') as HTMLInputElement;\n    input.innerText = this.selectedProduct.categoryName;\n    input = document.getElementById('psubcategoryName') as HTMLInputElement;\n    input.innerText = this.selectedProduct.subcategoryName;\n    input = document.getElementById('description') as HTMLInputElement;\n    input.innerText = this.selectedProduct.description;\n  }\n\n  checkProductId() {\n    var message = document.getElementById('productIdErrorMessage') as HTMLHeadingElement;\n    if (this.selectedProduct.id == 0) {\n      message.classList.remove('d-none')\n    }\n    else {\n      message.classList.add('d-none');\n    }\n  }\n\n  add() {\n    this.productService.add(this.addNewForm.getRawValue());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}