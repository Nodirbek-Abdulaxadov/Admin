{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nexport class TokenService {\n  constructor() {}\n  getFullname() {\n    var localdata = localStorage.getItem('data');\n    var json = JSON.parse(localdata ?? \"\");\n    return json[\"FullName\"];\n  }\n  getUserId() {\n    return this.getDecodedAccessToken()['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'];\n  }\n  getPhoneNumber() {\n    return this.getDecodedAccessToken().sub;\n  }\n  getRole() {\n    return this.getDecodedAccessToken()['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n  }\n  getDecodedAccessToken() {\n    try {\n      var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata ?? \"\");\n      var token = json[\"Token\"];\n      return jwt_decode(token);\n    } catch (Error) {\n      return null;\n    }\n  }\n}\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\nTokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenService,\n  factory: TokenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAOA,UAAU,MAAM,YAAY;;AAKnC,OAAM,MAAOC,YAAY;EAEvBC,eAAgB;EAEhBC,WAAW;IACT,IAAIC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC1C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,IAAE,EAAE,CAAC;IACpC,OAAOG,IAAI,CAAC,UAAU,CAAC;EAC3B;EAEAG,SAAS;IACP,OAAO,IAAI,CAACC,qBAAqB,EAAE,CAAC,sEAAsE,CAAC;EAC7G;EAEAC,cAAc;IACZ,OAAO,IAAI,CAACD,qBAAqB,EAAE,CAACE,GAAG;EACzC;EAEAC,OAAO;IACL,OAAO,IAAI,CAACH,qBAAqB,EAAE,CAAC,8DAA8D,CAAC;EACrG;EAEAA,qBAAqB;IACnB,IAAI;MACF,IAAIP,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC5C,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,IAAE,EAAE,CAAC;MACpC,IAAIW,KAAK,GAAGR,IAAI,CAAC,OAAO,CAAC;MACzB,OAAOP,UAAU,CAACe,KAAK,CAAC;KACzB,CAAC,OAAMC,KAAK,EAAE;MACb,OAAO,IAAI;;EAEf;;AA/BWf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAgB,SAAZhB,YAAY;EAAAiB,YAFX;AAAM","names":["jwt_decode","TokenService","constructor","getFullname","localdata","localStorage","getItem","json","JSON","parse","getUserId","getDecodedAccessToken","getPhoneNumber","sub","getRole","token","Error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\services\\helpers\\token.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor() { }\n\n  getFullname() {\n    var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata??\"\");\n      return json[\"FullName\"];\n  }\n\n  getUserId() {\n    return this.getDecodedAccessToken()['http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier'];\n  }\n\n  getPhoneNumber() {\n    return this.getDecodedAccessToken().sub;\n  }\n\n  getRole() {\n    return this.getDecodedAccessToken()['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'];\n  }\n\n  getDecodedAccessToken(): any {\n    try {\n      var localdata = localStorage.getItem('data');\n      var json = JSON.parse(localdata??\"\");\n      var token = json[\"Token\"];\n      return jwt_decode(token);\n    } catch(Error) {\n      return null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}