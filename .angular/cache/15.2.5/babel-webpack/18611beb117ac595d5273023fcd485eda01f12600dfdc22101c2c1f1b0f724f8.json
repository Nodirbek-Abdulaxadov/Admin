{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/root/home/home.component';\nimport { WarehouseComponent } from './components/warehouse/warehouse.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CategoryComponent } from './components/category/category.component';\nimport { SubcategoryComponent } from './components/subcategory/subcategory.component';\nimport { ProductComponent } from './components/product/product.component';\nimport { NewProductComponent } from './components/product/new-product/new-product.component';\nimport { ServerErrorComponent } from './pages/server-error/server-error.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { PrintComponent } from './pages/print/print.component';\nimport { EditProductComponent } from './components/product/edit-product/edit-product.component';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { NewWarehouseItemComponent } from './components/warehouse-item/new-warehouse-item/new-warehouse-item.component';\nimport { EditWarehouseItemComponent } from './components/warehouse-item/edit-warehouse-item/edit-warehouse-item.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { UserComponent } from './components/user/user.component';\nimport { SellerComponent } from './components/seller/seller.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { SalesComponent } from './components/sales/sales.component';\nimport { ManagePriceComponent } from './components/manage-price/manage-price.component';\nimport { ManageDiscountComponent } from './components/manage-discount/manage-discount.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: HomeComponent\n}, {\n  path: 'warehouse',\n  component: WarehouseComponent\n}, {\n  path: 'server-error',\n  component: ServerErrorComponent\n}, {\n  path: 'category',\n  component: CategoryComponent\n}, {\n  path: 'subcategory',\n  component: SubcategoryComponent\n}, {\n  path: 'product/page/:page',\n  component: ProductComponent\n}, {\n  path: 'product/add',\n  component: NewProductComponent\n}, {\n  path: 'product/edit/:productId',\n  component: EditProductComponent\n}, {\n  path: 'print/:barcode',\n  component: PrintComponent\n}, {\n  path: 'warehouse-items',\n  component: WarehouseItemComponent\n}, {\n  path: 'warehouse-items/add',\n  component: NewWarehouseItemComponent\n}, {\n  path: 'warehouse-item/edit/:warehouseItemId',\n  component: EditWarehouseItemComponent\n}, {\n  path: 'customers',\n  component: CustomerComponent\n}, {\n  path: 'transfers/page/:page',\n  component: TransferComponent\n}, {\n  path: 'users/admin',\n  component: UserComponent\n}, {\n  path: 'users/seller',\n  component: SellerComponent\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'sales/page/:page',\n  component: SalesComponent\n}, {\n  path: 'price-management',\n  component: ManagePriceComponent\n}, {\n  path: 'discount',\n  component: ManageDiscountComponent\n}, {\n  path: '**',\n  component: NotFoundComponent\n}];\nexport class AppRoutingModule {}\nAppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n  return new (t || AppRoutingModule)();\n};\nAppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppRoutingModule\n});\nAppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [RouterModule.forRoot(routes), RouterModule]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"mappings":"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","names":["RouterModule","HomeComponent","WarehouseComponent","LoginComponent","CategoryComponent","SubcategoryComponent","ProductComponent","NewProductComponent","ServerErrorComponent","NotFoundComponent","PrintComponent","EditProductComponent","WarehouseItemComponent","NewWarehouseItemComponent","EditWarehouseItemComponent","CustomerComponent","UserComponent","SellerComponent","TransferComponent","SalesComponent","ManagePriceComponent","ManageDiscountComponent","routes","path","component","AppRoutingModule","forRoot","imports","exports"],"sourceRoot":"","sources":["C:\\Users\\Nodirbek\\Desktop\\ZAKAZ\\Admin\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/root/home/home.component';\nimport { WarehouseComponent } from './components/warehouse/warehouse.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { CategoryComponent } from './components/category/category.component';\nimport { SubcategoryComponent } from './components/subcategory/subcategory.component';\nimport { ProductComponent } from './components/product/product.component';\nimport { NewProductComponent } from './components/product/new-product/new-product.component';\nimport { ServerErrorComponent } from './pages/server-error/server-error.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { PrintComponent } from './pages/print/print.component';\nimport { EditProductComponent } from './components/product/edit-product/edit-product.component';\nimport { WarehouseItemComponent } from './components/warehouse-item/warehouse-item.component';\nimport { NewWarehouseItemComponent } from './components/warehouse-item/new-warehouse-item/new-warehouse-item.component';\nimport { EditWarehouseItemComponent } from './components/warehouse-item/edit-warehouse-item/edit-warehouse-item.component';\nimport { CustomerComponent } from './components/customer/customer.component';\nimport { UserComponent } from './components/user/user.component';\nimport { SellerComponent } from './components/seller/seller.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport { SalesComponent } from './components/sales/sales.component';\nimport { ManagePriceComponent } from './components/manage-price/manage-price.component';\nimport { ManageDiscountComponent } from './components/manage-discount/manage-discount.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'warehouse', component: WarehouseComponent},\n  {path: 'server-error', component: ServerErrorComponent},\n  {path: 'category', component: CategoryComponent},\n  {path: 'subcategory', component: SubcategoryComponent},\n  {path: 'product/page/:page', component: ProductComponent},\n  {path: 'product/add', component: NewProductComponent},\n  {path: 'product/edit/:productId', component: EditProductComponent},\n  {path: 'print/:barcode', component: PrintComponent},\n  {path: 'warehouse-items', component: WarehouseItemComponent},\n  {path: 'warehouse-items/add', component: NewWarehouseItemComponent},\n  {path: 'warehouse-item/edit/:warehouseItemId', component: EditWarehouseItemComponent},\n  {path: 'customers', component: CustomerComponent},\n  {path: 'transfers/page/:page', component: TransferComponent},\n  {path: 'users/admin', component: UserComponent},\n  {path: 'users/seller', component: SellerComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'sales/page/:page', component: SalesComponent},\n  {path: 'price-management', component: ManagePriceComponent},\n  {path: 'discount', component: ManageDiscountComponent},\n  {path: '**', component: NotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}